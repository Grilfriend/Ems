<?xml version="1.0" encoding="utf-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.qhit.produceJob.dao.IProduceJobDao"> 
	<!-- 自定义结果集 --> 
	<resultMap id="BaseResultMap" type="com.qhit.produceJob.pojo.ProduceJob"> 
		<id property="jobid" column="jobid" javaType="java.lang.Integer"></id> 
		<result property="devid" column="devid" javaType="java.lang.Integer"></result> 
		<result property="starttime" column="starttime" javaType="java.lang.String"></result> 
		<result property="completetime" column="completetime" javaType="java.lang.String"></result> 
		<result property="duration" column="duration" javaType="java.lang.Double"></result> 
		<result property="amount" column="amount" javaType="java.lang.Double"></result> 
		<result property="reportid" column="reportid" javaType="java.lang.Integer"></result> 
	</resultMap>

	<!-- 在各种标签中，id属性必须与接口中的方法名一样，id的值必须是唯一的，parameterType指查询时使用的参数类型， 
	resultType属性指明查询返回的结果集类型    --> 
 
	<sql id="Base_Column_List" > 
		jobid,devid,starttime,completetime,duration,amount,reportid 
	</sql> 
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where jobid = #{jobid} 
	</select> 
	<delete id="delete" parameterType="java.lang.Integer" > 
		delete from produce_job 
		where jobid = #{jobid} 
	</delete> 
	<insert id="insert" parameterType="com.qhit.produceJob.pojo.ProduceJob" > 
		insert into produce_job(devid,starttime,completetime,duration,amount,reportid) 
		values (#{devid},#{starttime},#{completetime},#{duration},#{amount},#{reportid}) 
	</insert> 
	<update id="updateSelective" parameterType="com.qhit.produceJob.pojo.ProduceJob" > 
		update produce_job 
		<set > 
			<if test="devid != null and devid!='' " > 
				devid = #{devid}, 
			</if> 
			<if test="starttime != null and starttime!='' " > 
				starttime = #{starttime}, 
			</if> 
			<if test="completetime != null and completetime!='' " > 
				completetime = #{completetime}, 
			</if> 
			<if test="duration != null and duration!='' " > 
				duration = #{duration}, 
			</if> 
			<if test="amount != null and amount!='' " > 
				amount = #{amount}, 
			</if> 
			<if test="reportid != null and reportid!='' " > 
				reportid = #{reportid}, 
			</if> 
		</set> 
		where jobid = #{jobid} 
	</update> 
	<update id="update" parameterType="com.qhit.produceJob.pojo.ProduceJob" > 
		update produce_job 
		set  devid = #{devid}, starttime = #{starttime}, completetime = #{completetime}, duration = #{duration}, amount = #{amount}, reportid = #{reportid} 
		where jobid = #{jobid} 
	</update> 
	<select id="findAll" resultMap="BaseResultMap" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
	</select> 
	<select id="findByDevid" resultMap="BaseResultMap" parameterType="java.lang.Integer" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where devid = #{devid} 
	</select> 
	<select id="findByStarttime" resultMap="BaseResultMap" parameterType="java.lang.String" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where starttime = #{starttime} 
	</select> 
	<select id="findByCompletetime" resultMap="BaseResultMap" parameterType="java.lang.String" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where completetime = #{completetime} 
	</select> 
	<select id="findByDuration" resultMap="BaseResultMap" parameterType="java.lang.Double" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where duration = #{duration} 
	</select> 
	<select id="findByAmount" resultMap="BaseResultMap" parameterType="java.lang.Double" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where amount = #{amount} 
	</select> 
	<select id="findByReportid" resultMap="BaseResultMap" parameterType="java.lang.Integer" > 
		select 
		<include refid="Base_Column_List" /> 
		from produce_job 
		where reportid = #{reportid} 
	</select> 
	<delete id="deleteBatch" parameterType="java.util.Arrays"> 
		delete from produce_job where jobid in 
		<foreach collection="array" item="id" open="(" close=")" separator=","> 
			#{id} 
		</foreach> 
	</delete> 
	<select id="search" parameterType="com.qhit.produceJob.pojo.ProduceJob" resultMap="BaseResultMap"> 
		select * from  produce_job 
		<where > 
			<if test="devid != null and devid!='' " > 
				 and devid = #{devid} 
			</if> 
			<if test="starttime != null and starttime!='' " > 
				 and starttime = #{starttime} 
			</if> 
			<if test="completetime != null and completetime!='' " > 
				 and completetime = #{completetime} 
			</if> 
			<if test="duration != null and duration!='' " > 
				 and duration = #{duration} 
			</if> 
			<if test="amount != null and amount!='' " > 
				 and amount = #{amount} 
			</if> 
			<if test="reportid != null and reportid!='' " > 
				 and reportid = #{reportid} 
			</if> 
		</where> 
	</select>

	<select id="devamount" parameterType="java.util.Map" resultType="java.util.Map">
	select bd.devname as dev,sum(amount) as amount
		from produce_job pj left  join base_device bd on pj.devid=bd.devid
		left join produce_report pr on pr.reportid=pj.reportid
		left join base_flow bf on bf.flowid=pr.flowid
		where year(pj.completetime) = '${year}'
		and bf.flowid='${flowid}'
		group by bd.devname
	</select>

	<select id="selectDevConsume" parameterType="java.util.Map" resultType="java.util.Map">
		select  m.月份,
		<foreach collection="devices"  item="item" separator=",">
			MAX(CASE m.devname WHEN '${item.devname}' THEN m.consume ELSE 0 END ) '${item.devname}'
		</foreach>
		from  (select bd.devname,concat(month(pr.completetime),'月') as '月份',
		sum(round(
		(ec.electric * (select es.ratio from  energy_standradcoal es where es.sid=1)) +
		(ec.water * (select es.ratio from  energy_standradcoal es where es.sid=2)) +
		(ec.oil * (select es.ratio from  energy_standradcoal es where es.sid=3)),2))as consume
		from energy_consume ec
		join produce_report pr on ec.reportid=pr.reportid
		join base_device bd on ec.devid=bd.devid
		where year(pr.completetime) = '${year}'
		group by bd.devname,month(pr.completetime) )m
		group by m.月份
		order by  cast(replace(m.月份,'月','') as signed)
	</select>

	<select id="selectDevTypeConsume" parameterType="java.util.Map" resultType="java.util.Map">
		select  m.月份,
		<foreach collection="devTypeList"  item="item" separator=",">
			MAX(CASE m.typename WHEN '${item.typename}' THEN m.consume ELSE 0 END ) '${item.typename}'
		</foreach>
		from  (select bt.typename,concat(month(pr.completetime),'月') as '月份',
		sum(round(
		(ec.electric * (select es.ratio from  energy_standradcoal es where es.sid=1)) +
		(ec.water * (select es.ratio from  energy_standradcoal es where es.sid=2)) +
		(ec.oil * (select es.ratio from  energy_standradcoal es where es.sid=3)),2))as consume
		from energy_consume ec
		join produce_report pr on ec.reportid=pr.reportid
		join base_device bd on ec.devid=bd.devid
		join base_devtype bt on bd.typeid=bt.typeid
		where year(pr.completetime) = '${year}'
		group by bt.typename,month(pr.completetime) )m
		group by m.月份
		order by  cast(replace(m.月份,'月','') as signed)
	</select>

	<select id="selectElectricConsume" parameterType="java.util.Map" resultType="java.util.Map">
		select  m.月份,
		<foreach collection="devices"  item="item" separator=",">
			MAX(CASE m.devname WHEN '${item.devname}' THEN m.ratio ELSE 0 END ) '${item.devname}'
		</foreach>
		from  (select bd.devname,concat(month(pr.completetime),'月') as '月份',
		round(sum(ec.electric)/sum(pj.amount),2) as ratio
		from produce_report pr
		join produce_job pj on pr.reportid=pj.reportid
		join energy_consume ec on pr.reportid=ec.reportid and pj.devid=ec.devid
		join base_device bd on pj.devid=bd.devid
		where year(pr.completetime) = '${year}'
		group by bd.devname,month(pr.completetime) )m
		group by m.月份
		order by  cast(replace(m.月份,'月','') as signed)
	</select>

	<select id="selectWaterConsume" parameterType="java.util.Map" resultType="java.util.Map">
		select  m.月份,
		<foreach collection="devices"  item="item" separator=",">
			MAX(CASE m.devname WHEN '${item.devname}' THEN m.ratio ELSE 0 END ) '${item.devname}'
		</foreach>
		from  (select bd.devname,concat(month(pr.completetime),'月') as '月份',
		round(sum(ec.water)/sum(pj.amount),2) as ratio
		from produce_report pr
		join produce_job pj on pr.reportid=pj.reportid
		join energy_consume ec on pr.reportid=ec.reportid and pj.devid=ec.devid
		join base_device bd on pj.devid=bd.devid
		where year(pr.completetime) = '${year}'
		group by bd.devname,month(pr.completetime) )m
		group by m.月份
		order by  cast(replace(m.月份,'月','') as signed)
	</select>

	<select id="selectOilConsume" parameterType="java.util.Map" resultType="java.util.Map">
		select  m.月份,
		<foreach collection="devices"  item="item" separator=",">
			MAX(CASE m.devname WHEN '${item.devname}' THEN m.ratio ELSE 0 END ) '${item.devname}'
		</foreach>
		from  (select bd.devname,concat(month(pr.completetime),'月') as '月份',
		round(sum(ec.oil)/sum(pj.amount),2) as ratio
		from produce_report pr
		join produce_job pj on pr.reportid=pj.reportid
		join energy_consume ec on pr.reportid=ec.reportid and pj.devid=ec.devid
		join base_device bd on pj.devid=bd.devid
		where year(pr.completetime) = '${year}'
		group by bd.devname,month(pr.completetime) )m
		group by m.月份
		order by  cast(replace(m.月份,'月','') as signed)
	</select>






	<select id="findradio" parameterType="java.util.Map" resultType="java.util.Map">
SELECT bc.compname as compname,bv.typename as devType,ROUND(SUM(pj.duration)/(COUNT(DISTINCT pj.devid)*(365*24)),4) AS ratio
FROM base_company bc LEFT JOIN base_device bd ON bc.compid=bd.compid
LEFT JOIN base_devtype bv ON bd.typeid=bv.typeid
LEFT JOIN produce_job pj ON bd.devid=pj.devid
WHERE  YEAR(pj.completetime)='${year}'
GROUP BY bc.compid, bv.typeid
	</select>

	<select id="findwanhaolu" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT bc.compname,bv.typename,ROUND((SUM(pj.duration)-SUM(pf.faulttime/60))/SUM(pj.duration),3) AS radio
FROM base_company bc LEFT JOIN base_device bd ON bc.compid=bd.compid
LEFT JOIN base_devtype bv ON bd.typeid=bv.typeid
LEFT JOIN produce_job pj ON bd.devid=pj.devid
LEFT JOIN produce_fault pf ON pf.devid=bd.devid
WHERE  YEAR(pj.completetime)='${year}'
GROUP BY bc.compid, bv.typeid

	</select>

</mapper> 
